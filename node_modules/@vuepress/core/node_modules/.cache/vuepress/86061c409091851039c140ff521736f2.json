{"remainingRequest":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\@vuepress\\core\\.temp\\internal\\page-components.js","dependencies":[{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\@vuepress\\core\\.temp\\internal\\page-components.js","mtime":1599794983878},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}