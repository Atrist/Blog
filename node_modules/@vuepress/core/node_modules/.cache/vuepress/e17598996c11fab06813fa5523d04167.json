{"remainingRequest":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\atrist\\OneDrive\\github\\blog\\main\\.vuepress\\components\\level.vue?vue&type=style&index=0&id=e497ff0a&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\main\\.vuepress\\components\\level.vue","mtime":1590416125530},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKJGJhY2tncm91bmQtY29sb3I6ICNkZGQ7CiRwcm9ncmVzcy1jb2xvcjogcmdiKDY1LCAxODQsIDEzMSk7CiRoZWFkLXdpZHRoOiAyOwoKLmNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICB3aWR0aDogNjAwcHg7CiAgbWFyZ2luOiA1cHggMDsKICAucHJvZ3Jlc3MtaGVhZCB7CiAgICBmbGV4OiAkaGVhZC13aWR0aDsKICB9CiAgLnByb2dyZXNzLWJvZHkgewogICAgZmxleDogMTAtICRoZWFkLXdpZHRoOwogIH0KfQo="},{"version":3,"sources":["level.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"level.vue","sourceRoot":"main/.vuepress/components","sourcesContent":["<template>\n  <div>\n    <el-row :gutter=\"10\">\n      <el-col :span=\"6\">\n        <div>{{ name }}</div>\n      </el-col>\n      <el-col :span=\"18\">\n        <el-progress\n          :text-inside=\"true\"\n          :stroke-width=\"18\"\n          :percentage=\"Number(progress)\"\n          :status=\"status\"\n        ></el-progress>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n<style lang=\"scss\" scoped>\n$background-color: #ddd;\n$progress-color: rgb(65, 184, 131);\n$head-width: 2;\n\n.container {\n  display: flex;\n  width: 600px;\n  margin: 5px 0;\n  .progress-head {\n    flex: $head-width;\n  }\n  .progress-body {\n    flex: 10- $head-width;\n  }\n}\n</style>\n<script>\nexport default {\n  name: \"level\",\n  props: [\"progress\", \"name\", \"status\"],\n  data() {\n    return {\n      progressWidth: 100\n    };\n  },\n  methods: {\n    setProgressWidth: function() {\n      // 获取 wrap的宽度\n      // 通过process的宽度来设置 bar的宽度\n      const wrapWidth = this.$refs.progressWrap.clientWidth;\n      const barWidth = (this.progress * wrapWidth) / 100;\n      this.progressWidth = barWidth;\n    }\n  },\n  mounted() {\n    // 整个视图都渲染完毕 再修改progress的宽度\n    this.$nextTick(function() {\n      // 设置长度\n      this.setProgressWidth();\n    });\n  }\n  // 当窗口的宽度变化, level相对应的大小也要改变  暂定后面再写\n};\n</script>\n"]}]}