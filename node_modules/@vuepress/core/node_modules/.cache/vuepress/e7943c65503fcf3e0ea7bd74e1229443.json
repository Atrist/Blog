{"remainingRequest":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\vuepress-plugin-demo-code\\src\\DemoAndCode.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\vuepress-plugin-demo-code\\src\\DemoAndCode.vue","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\stylus-loader\\index.js","mtime":1519606876000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\atrist\\OneDrive\\github\\blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpodG1sIHsKICAgIHNjcm9sbC1iZWhhdmlvcjogc21vb3RoOwp9CgouZGVtby1hbmQtY29kZS13cmFwcGVyIHsKICAgIHBhZGRpbmc6IDIwcHggMDsKCiAgICAvLyBmb3IgdnVlcHJlc3MtcGx1Z2luLWNvZGUtY29weQogICAgLmNvZGUtY29weSB7CiAgICAgICAgcG9zaXRpb246IGFic29sdXRlOwogICAgICAgIHRvcDogMjBweDsKICAgICAgICByaWdodDogMDsKCiAgICAgICAgb3BhY2l0eTogMTsKCiAgICAgICAgc3ZnIHsKICAgICAgICAgICAgcmlnaHQ6IDEwcHg7CiAgICAgICAgfQogICAgfQoKICAgIC5jb2RlLWNvbnRyb2wgewogICAgICAgIHBvc2l0aW9uOiBzdGlja3k7CiAgICAgICAgei1pbmRleDogOTsKCiAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CgogICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgIGhlaWdodDogNTBweDsKICAgICAgICBtYXJnaW4tYm90dG9tOiAtLjg1cmVtOwoKICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CgogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CgogICAgICAgIGZvbnQtc2l6ZTogMjBweDsKICAgICAgICBsaW5lLWhlaWdodDogNTBweDsKCiAgICAgICAgLmNvbnRyb2wtYnRuIHsKICAgICAgICAgICAgZGlzcGxheTogZmxleDsKICAgICAgICAgICAgZmxleDogMTsKICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgICAgICAgfQoKICAgICAgICAuYXJyb3ctaWNvbiB7CiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyOwoKICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDVweDsKCiAgICAgICAgICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAuM3MgZWFzZS1pbi1vdXQ7CgogICAgICAgICAgICBib3JkZXItdG9wOiBub25lOwogICAgICAgICAgICBib3JkZXItcmlnaHQ6IDZweCBzb2xpZCB0cmFuc3BhcmVudDsKICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogNnB4IHNvbGlkICMyYzNlNTA7CiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiA2cHggc29saWQgdHJhbnNwYXJlbnQ7CiAgICAgICAgfQogICAgfQoKICAgIC5jb2RlLXdyYXBwZXIgewogICAgICAgIG92ZXJmbG93OiBoaWRkZW47CgogICAgICAgIHRyYW5zaXRpb246IG1heC1oZWlnaHQgLjZzIGVhc2UtaW4tb3V0OwogICAgfQp9CgpAbWVkaWEgKG1heC13aWR0aDogNDE5cHgpIHsKICAgIC5kZW1vLWFuZC1jb2RlLXdyYXBwZXIgewogICAgICAgIG1hcmdpbjogMCAtMS41cmVtOwoKICAgICAgICAuY29kZS13cmFwcGVyIHsKICAgICAgICAgICAgb3ZlcmZsb3c6IGF1dG87CiAgICAgICAgfQoKICAgICAgICBkaXZbY2xhc3MqPSJsYW5ndWFnZS0iXSB7CiAgICAgICAgICAgIG1hcmdpbjogMCAhaW1wb3J0YW50OwogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["DemoAndCode.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"DemoAndCode.vue","sourceRoot":"node_modules/vuepress-plugin-demo-code/src","sourcesContent":["<template>\n    <section class=\"demo-and-code-wrapper\">\n        <slot name=\"demo\" />\n\n        <div\n            ref=\"codeControl\"\n            class=\"code-control\"\n            @click=\"onClickControl\"\n            :style=\"codeControlStyle\"\n        >\n            <span class=\"control-btn\" v-show=\"isShowControl\">\n                {{ controlText }}\n                <i class=\"arrow-icon\" :style=\"iconStyle\" />\n            </span>\n\n            <div class=\"online-wrapper\" @click.stop>\n                <OnlineEdit\n                    v-for=\"platform in platforms\"\n                    :key=\"platform\"\n                    v-show=\"showOnlineBtns[platform]\"\n                    v-bind=\"parsedCode\"\n                    :platform=\"platform\"\n                />\n            </div>\n        </div>\n\n        <div class=\"code-wrapper\" ref=\"codeWrapper\" :style=\"codeWrapperStyle\">\n            <div\n                v-html=\"highlightCode\"\n                :class=\"`language-${language} extra-class`\"\n            />\n        </div>\n    </section>\n</template>\n\n<script>\nimport OnlineEdit from './OnlineEdit.vue'\nimport getHighlightCodeHtml from './highlight'\nimport {\n    JS_RE,\n    CSS_RE,\n    HTML_RE,\n    PLATFORMS,\n} from './constants'\nimport {\n    parseAndDecode,\n    getMatchedResult,\n} from './utils'\n\nexport default {\n    name: 'DemoAndCode',\n    components: {\n        OnlineEdit,\n    },\n    props: {\n        htmlStr: { type: String, default: '' },\n        language: { type: String, default: 'vue' },\n        showText: { type: String, default: 'show code' },\n        hideText: { type: String, default: 'hide code' },\n        jsLibsStr: { type: String, default: '[]' },\n        cssLibsStr: { type: String, default: '[]' },\n        minHeight: {\n            type: Number,\n            default: 200,\n            validator: val => val >= 0,\n        },\n        onlineBtnsStr: { type: String, default: '{}' },\n        codesandboxStr: { type: String, default: '{}' },\n    },\n    data () {\n        return {\n            scrollTop: 0,\n            platforms: PLATFORMS,\n            codeHeight: 9999,\n            navbarHeight: 0,\n\n            isShowCode: true,\n            isShowControl: true,\n        }\n    },\n    computed: {\n        // button text\n        controlText: (vm) => vm.isShowCode ? vm.hideText : vm.showText,\n        highlightCode: vm => getHighlightCodeHtml(vm.decodedHtmlStr, vm.language),\n        decodedHtmlStr: vm => decodeURIComponent(vm.htmlStr),\n        showOnlineBtns: vm => parseAndDecode(vm.onlineBtnsStr),\n        // icon animation\n        iconStyle: (vm) => ({\n            transform: vm.isShowCode ? 'rotate(0)' : 'rotate(-180deg)',\n        }),\n        // animation\n        codeWrapperStyle: (vm) => ({\n            'max-height': vm.isShowCode ? `${vm.codeHeight}px` : `${vm.minHeight}px`,\n        }),\n        // sticky\n        codeControlStyle: (vm) => ({\n            top: vm.isShowCode ? `${vm.navbarHeight}px` : '0',\n            cursor: vm.isShowControl ? 'pointer' : 'auto',\n        }),\n        parsedCode: (vm) => {\n            const js = getMatchedResult(JS_RE)(vm.decodedHtmlStr) || ''\n            const css = getMatchedResult(CSS_RE)(vm.decodedHtmlStr) || ''\n            const html = getMatchedResult(HTML_RE)(vm.decodedHtmlStr) || vm.decodedHtmlStr\n                .replace(JS_RE, '')\n                .replace(CSS_RE, '')\n                .replace(HTML_RE, '')\n                .trim()\n\n            const jsLibs = parseAndDecode(vm.jsLibsStr)\n            const cssLibs = parseAndDecode(vm.cssLibsStr)\n            const codesandboxOptions = parseAndDecode(vm.codesandboxStr)\n\n            return { js, css, html, jsLibs, cssLibs, codesandboxOptions }\n        },\n    },\n    methods: {\n        onClickControl () {\n            this.isShowCode = !this.isShowCode\n\n            if (!this.isShowCode) {\n                this.getDomRect()\n                window.scrollTo({ top: this.scrollTop, behavior: 'smooth' })\n            }\n        },\n        getDomRect () {\n            const navbar = document.querySelector('header.navbar')\n            const { codeWrapper } = this.$refs\n\n            const { top: codeTop, height: codeHeight } = codeWrapper.getBoundingClientRect()\n            const { height: navbarHeight } = navbar\n                ? navbar.getBoundingClientRect()\n                : { height: 0 }\n\n            this.scrollTop = window.scrollY + codeTop - navbarHeight - 35\n            this.codeHeight = codeHeight\n            this.navbarHeight = navbarHeight\n        },\n    },\n\n    mounted () {\n        this.getDomRect()\n        this.isShowCode = false\n\n        if (this.codeHeight < this.minHeight) {\n            this.isShowControl = false\n        }\n    },\n}\n</script>\n\n<style lang=\"stylus\">\n\nhtml {\n    scroll-behavior: smooth;\n}\n\n.demo-and-code-wrapper {\n    padding: 20px 0;\n\n    // for vuepress-plugin-code-copy\n    .code-copy {\n        position: absolute;\n        top: 20px;\n        right: 0;\n\n        opacity: 1;\n\n        svg {\n            right: 10px;\n        }\n    }\n\n    .code-control {\n        position: sticky;\n        z-index: 9;\n\n        display: flex;\n        justify-content: space-between;\n\n        width: 100%;\n        height: 50px;\n        margin-bottom: -.85rem;\n\n        text-align: center;\n\n        background-color: #fff;\n\n        font-size: 20px;\n        line-height: 50px;\n\n        .control-btn {\n            display: flex;\n            flex: 1;\n            justify-content: center;\n        }\n\n        .arrow-icon {\n            display: inline-block;\n            align-self: center;\n\n            margin-left: 5px;\n\n            transition: transform .3s ease-in-out;\n\n            border-top: none;\n            border-right: 6px solid transparent;\n            border-bottom: 6px solid #2c3e50;\n            border-left: 6px solid transparent;\n        }\n    }\n\n    .code-wrapper {\n        overflow: hidden;\n\n        transition: max-height .6s ease-in-out;\n    }\n}\n\n@media (max-width: 419px) {\n    .demo-and-code-wrapper {\n        margin: 0 -1.5rem;\n\n        .code-wrapper {\n            overflow: auto;\n        }\n\n        div[class*=\"language-\"] {\n            margin: 0 !important;\n        }\n    }\n}\n</style>\n"]}]}