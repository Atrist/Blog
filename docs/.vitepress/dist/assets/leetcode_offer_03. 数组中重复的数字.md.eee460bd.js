import{o as n,c as s,a}from"./app.49b0587d.js";const t='{"title":"数组中重复的数字","description":"","frontmatter":{},"headers":[{"level":2,"title":"数组中重复的数字","slug":"数组中重复的数字"},{"level":3,"title":"示例 1：","slug":"示例-1："},{"level":3,"title":"限制：","slug":"限制："},{"level":2,"title":"分析","slug":"分析"},{"level":2,"title":"原地交换","slug":"原地交换"},{"level":3,"title":"算法流程","slug":"算法流程"},{"level":3,"title":"代码","slug":"代码"}],"relativePath":"leetcode/offer/03. 数组中重复的数字.md","lastUpdated":1619879828863}',p={},e=a('<h2 id="数组中重复的数字"><a class="header-anchor" href="#数组中重复的数字" aria-hidden="true">#</a> 数组中重复的数字</h2><p>找出数组中重复的数字。</p><p>在一个长度为 n 的数组 <code>nums</code> 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p><h3 id="示例-1："><a class="header-anchor" href="#示例-1：" aria-hidden="true">#</a> 示例 1：</h3><div class="language-"><pre><code>输入：\n[2, 3, 1, 0, 2, 5, 3]\n输出：\n2 或 3 \n</code></pre></div><h3 id="限制："><a class="header-anchor" href="#限制：" aria-hidden="true">#</a> 限制：</h3><p><code>2</code> &lt;= n &lt;= <code>100000</code></p><h2 id="分析"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><p>使用 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set" target="_blank" rel="noopener noreferrer">set</a> 记录，遍历一次，记录就行</p><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">findRepeatNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n        <span class="token keyword">else</span> map<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="原地交换"><a class="header-anchor" href="#原地交换" aria-hidden="true">#</a> 原地交换</h2><p><a href="https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/solution/mian-shi-ti-03-shu-zu-zhong-zhong-fu-de-shu-zi-yua/" target="_blank" rel="noopener noreferrer">题解出处</a></p><blockquote><p>在一个长度为 n 的数组 nums 里的所有数字都在 0 ~ n-1 的范围内</p></blockquote><p>表明, 数组元素的 <strong>索引</strong> 和 <strong>值</strong> 是 一对多 的关系, 可以借助索引映射对应的值，起到与字典相同的作用</p><p><img src="https://pic.leetcode-cn.com/1618146573-bOieFQ-Picture0.png" alt=""></p><h3 id="算法流程"><a class="header-anchor" href="#算法流程" aria-hidden="true">#</a> 算法流程</h3><ol><li>遍历数组 <ol><li>若 nums[i] === i, 跳过</li><li>若 nums[nums[i]] = nums[i], 代表索引 nums[i] 处和索引 i 处的元素值都为 nums[i] ，即找到一组重复值，返回此值 nums[i] ；</li><li>否则 交换索引为 i 和 nums[i] 的元素值，将此数字交换至对应索引位置。</li></ol></li></ol><h3 id="代码"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">findRepeatNumber</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> i<span class="token punctuation">)</span> <span class="token keyword">continue</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">===</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n        <span class="token keyword">let</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n        nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>temp<span class="token punctuation">]</span>\n        nums<span class="token punctuation">[</span>temp<span class="token punctuation">]</span> <span class="token operator">=</span> temp\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div>',19);p.render=function(a,t,p,o,c,u){return n(),s("div",null,[e])};export default p;export{t as __pageData};
