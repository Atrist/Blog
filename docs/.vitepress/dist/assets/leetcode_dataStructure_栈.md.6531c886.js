import{o as a,c as n,a as s}from"./app.49b0587d.js";const e='{"title":"什么是栈","description":"","frontmatter":{},"headers":[{"level":2,"title":"什么是栈","slug":"什么是栈"},{"level":3,"title":"进","slug":"进"},{"level":3,"title":"出","slug":"出"},{"level":3,"title":"代码实现","slug":"代码实现"},{"level":3,"title":"栈的应用","slug":"栈的应用"}],"relativePath":"leetcode/dataStructure/栈.md","lastUpdated":1619535558433}',t={},p=s('<h2 id="什么是栈"><a class="header-anchor" href="#什么是栈" aria-hidden="true">#</a> 什么是栈</h2><p>栈跟队列有些相似, 它的特点是:</p><ol><li>先进后出</li><li>栈满还存会“上溢”，栈空再取会“下溢”</li></ol><p>借助 js 中 pop, push可以实现一个简单的栈</p><h3 id="进"><a class="header-anchor" href="#进" aria-hidden="true">#</a> 进</h3><div class="language-js"><pre><code>Array<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="出"><a class="header-anchor" href="#出" aria-hidden="true">#</a> 出</h3><div class="language-js"><pre><code>Array<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="代码实现"><a class="header-anchor" href="#代码实现" aria-hidden="true">#</a> 代码实现</h3><div class="language-js"><pre><code><span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token comment">// 只能使用以下两个 api</span>\nstack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nstack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="栈的应用"><a class="header-anchor" href="#栈的应用" aria-hidden="true">#</a> 栈的应用</h3><p>在 js 的函数调用中, 都是使用了栈来保存一些中间信息。</p>',12);t.render=function(s,e,t,o,c,l){return a(),n("div",null,[p])};export default t;export{e as __pageData};
