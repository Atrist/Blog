import{o as n,c as a,a as s}from"./app.49b0587d.js";const o='{"title":"制作 m 束花所需的最少天数","description":"","frontmatter":{},"headers":[{"level":2,"title":"制作 m 束花所需的最少天数","slug":"制作-m-束花所需的最少天数"},{"level":3,"title":"示例 1：","slug":"示例-1："},{"level":3,"title":"示例 2：","slug":"示例-2："},{"level":3,"title":"示例 3：","slug":"示例-3："},{"level":3,"title":"示例 4：","slug":"示例-4："},{"level":3,"title":"示例 5：","slug":"示例-5："},{"level":2,"title":"分析","slug":"分析"},{"level":3,"title":"题意分析","slug":"题意分析"},{"level":3,"title":"解题分析","slug":"解题分析"},{"level":3,"title":"代码","slug":"代码"},{"level":2,"title":"参考资料","slug":"参考资料"}],"relativePath":"leetcode/dayOne/1482. 制作 m 束花所需的最少天数.md","lastUpdated":1620573429510}',e={},p=s('<h2 id="制作-m-束花所需的最少天数"><a class="header-anchor" href="#制作-m-束花所需的最少天数" aria-hidden="true">#</a> 制作 m 束花所需的最少天数</h2><p>给你一个整数数组 <code>bloomDay</code>，以及两个整数 <code>m</code> 和 <code>k</code> 。</p><p>现需要制作 <code>m</code> 束花。制作花束时，需要使用花园中 <strong>相邻的 <code>k</code> 朵花</strong> 。</p><p>花园中有 <code>n</code> 朵花，第 <code>i</code> 朵花会在 <code>bloomDay[i]</code> 时盛开，<strong>恰好</strong> 可以用于 <strong>一束</strong> 花中。</p><p>请你返回从花园中摘 <code>m</code> 束花需要等待的最少的天数。如果不能摘到 <code>m</code> 束花则返回 <code>-1</code> 。</p><h3 id="示例-1："><a class="header-anchor" href="#示例-1：" aria-hidden="true">#</a> 示例 1：</h3><div class="language-"><pre><code>输入：bloomDay = [1,10,3,10,2], m = 3, k = 1\n输出：3\n解释：让我们一起观察这三天的花开过程，x 表示花开，而 _ 表示花还未开。\n现在需要制作 3 束花，每束只需要 1 朵。\n1 天后：[x, _, _, _, _]   // 只能制作 1 束花\n2 天后：[x, _, _, _, x]   // 只能制作 2 束花\n3 天后：[x, _, x, _, x]   // 可以制作 3 束花，答案为 3\n</code></pre></div><h3 id="示例-2："><a class="header-anchor" href="#示例-2：" aria-hidden="true">#</a> 示例 2：</h3><div class="language-"><pre><code>输入：bloomDay = [1,10,3,10,2], m = 3, k = 2\n输出：-1\n解释：要制作 3 束花，每束需要 2 朵花，也就是一共需要 6 朵花。而花园中只有 5 朵花，无法满足制作要求，返回 -1 。\n</code></pre></div><h3 id="示例-3："><a class="header-anchor" href="#示例-3：" aria-hidden="true">#</a> 示例 3：</h3><div class="language-"><pre><code>输入：bloomDay = [7,7,7,7,12,7,7], m = 2, k = 3\n输出：12\n解释：要制作 2 束花，每束需要 3 朵。\n花园在 7 天后和 12 天后的情况如下：\n7 天后：[x, x, x, x, _, x, x]\n可以用前 3 朵盛开的花制作第一束花。但不能使用后 3 朵盛开的花，因为它们不相邻。\n12 天后：[x, x, x, x, x, x, x]\n显然，我们可以用不同的方式制作两束花。\n</code></pre></div><h3 id="示例-4："><a class="header-anchor" href="#示例-4：" aria-hidden="true">#</a> 示例 4：</h3><div class="language-"><pre><code>输入：bloomDay = [1000000000,1000000000], m = 1, k = 1\n输出：1000000000\n解释：需要等 1000000000 天才能采到花来制作花束\n</code></pre></div><h3 id="示例-5："><a class="header-anchor" href="#示例-5：" aria-hidden="true">#</a> 示例 5：</h3><div class="language-"><pre><code>输入：bloomDay = [1,10,2,9,3,8,4,7,5,6], m = 4, k = 2\n输出：9\n</code></pre></div><h2 id="分析"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><h3 id="题意分析"><a class="header-anchor" href="#题意分析" aria-hidden="true">#</a> 题意分析</h3><ol><li>制作花束时，需要使用到 相邻的 <code>k</code> 朵花(这里, 存在一个 <code>k</code> 长度 的 连续子数组 )</li><li>第 <code>i</code> 朵花，会在 <code>bloomDay[i]</code> 时 盛开，且只能用来生成 <strong>一束</strong> 花。 (开花的时间已经确定)</li></ol><p>因为 <code>bloomDay</code> 已经给出，则花束的总量为: <code>bloomDay.length - 1</code></p><h3 id="解题分析"><a class="header-anchor" href="#解题分析" aria-hidden="true">#</a> 解题分析</h3><p>每束花需要<code>k</code>朵花, 需要制作 <code>m</code> 束花, 因此一共需要 <code>k * m</code> 朵花。</p><ul><li>如果花园中的花朵数量少于 <code>k×m</code>，即数组 <code>bloomDay</code> 的长度小于 <code>k×m</code>，则无法制作出指定数量的花束，返回 -1。</li><li>如果数组 <code>bloomDay</code> 的长度大于或等于 <code>k×m</code>，则一定可以制作出指定数量的花束</li></ul><p>为了计算出制定指定数量的花束的 最少天数， 需要实现一个指定的辅助函数，来确实在该天数下，能否制作成功。</p><p>辅助函数:</p><ul><li>遍历数组 <code>bloomDay</code></li><li>计算其长度为 k，且最大元素不超过 <code>days( bloomDay[i] )</code> 的 <strong>不重合的连续子数组</strong>的 数量 <code>sum</code>。 <ul><li>如果 <code>sum &gt;= m</code> <code>return true</code></li><li>否则 <code>return false</code></li></ul></li></ul><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token parameter">bloomDay<span class="token punctuation">,</span>days<span class="token punctuation">,</span>m<span class="token punctuation">,</span>k</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">let</span> bouquets <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> flowers <span class="token operator">=</span> <span class="token number">0</span>\n  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>bloomDay<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> bouquets<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>bloomDay<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>days<span class="token punctuation">)</span><span class="token punctuation">{</span>\n      flowers<span class="token operator">++</span><span class="token punctuation">;</span>\n      <span class="token keyword">if</span><span class="token punctuation">(</span>flowers <span class="token operator">===</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        bouquets<span class="token operator">++</span>\n        flowers<span class="token operator">=</span><span class="token number">0</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n      flowers<span class="token operator">=</span><span class="token number">0</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> bouquets <span class="token operator">&gt;=</span> m\n<span class="token punctuation">}</span>\n</code></pre></div><p>通过辅助函数的检测，可以将最少天数形成一个递增的真假序列(所以这里将使用二分查找)</p><ul><li>下限: Math.mix(bloomDay)</li><li>上限: Math.max(bloomDay)</li><li>if true right = mid</li><li>else left = mid</li></ul><h3 id="代码"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3><div class="language-js"><pre><code><span class="token comment">/**\n * @param {number[]} bloomDay\n * @param {number} m\n * @param {number} k\n * @return {number}\n */</span>\n<span class="token keyword">var</span> <span class="token function-variable function">minDays</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">bloomDay<span class="token punctuation">,</span> m<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>bloomDay<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> m<span class="token operator">*</span>k<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> left <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>bloomDay<span class="token punctuation">)</span>\n    <span class="token keyword">let</span> right <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>bloomDay<span class="token punctuation">)</span>\n    <span class="token keyword">while</span><span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>right<span class="token operator">-</span>left<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> left\n        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>mid<span class="token punctuation">,</span>bloomDay<span class="token punctuation">,</span>m<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token comment">// true</span>\n            right <span class="token operator">=</span> mid\n        <span class="token punctuation">}</span><span class="token keyword">else</span> left <span class="token operator">=</span> mid <span class="token operator">+</span><span class="token number">1</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> left\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">check</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token parameter">days<span class="token punctuation">,</span>bloomDay<span class="token punctuation">,</span> m<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>\n    <span class="token keyword">let</span> bouquets<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">let</span> flowers<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>bloomDay<span class="token punctuation">.</span>length<span class="token operator">&amp;&amp;</span>bouquets<span class="token operator">&lt;</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>bloomDay<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;=</span>days<span class="token punctuation">)</span><span class="token punctuation">{</span>\n            flowers<span class="token operator">++</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>flowers<span class="token operator">===</span>k<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                bouquets<span class="token operator">++</span>\n                flowers<span class="token operator">=</span><span class="token number">0</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span><span class="token keyword">else</span> flowers<span class="token operator">=</span><span class="token number">0</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> bouquets <span class="token operator">&gt;=</span> m <span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="参考资料"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2><ul><li><a href="https://leetcode-cn.com/problems/minimum-number-of-days-to-make-m-bouquets/" target="_blank" rel="noopener noreferrer">leetcode题目链接</a></li><li><a href="https://leetcode-cn.com/problems/minimum-number-of-days-to-make-m-bouquets/solution/zhi-zuo-m-shu-hua-suo-xu-de-zui-shao-tia-mxci/" target="_blank" rel="noopener noreferrer">官方题解</a></li></ul>',32);e.render=function(s,o,e,t,c,l){return n(),a("div",null,[p])};export default e;export{o as __pageData};
