import{o as n,c as a,a as s}from"./app.49b0587d.js";const e='{"title":"解码异或后的数组","description":"","frontmatter":{},"headers":[{"level":2,"title":"解码异或后的数组","slug":"解码异或后的数组"},{"level":3,"title":"示例 1：","slug":"示例-1："},{"level":3,"title":"示例 2：","slug":"示例-2："},{"level":2,"title":"分析","slug":"分析"},{"level":3,"title":"代码","slug":"代码"},{"level":3,"title":"大神版","slug":"大神版"},{"level":2,"title":"## 参考资料","slug":"参考资料"}],"relativePath":"leetcode/dayOne/1720. 解码异或后的数组.md","lastUpdated":1620313774982}',t={},p=s('<h2 id="解码异或后的数组"><a class="header-anchor" href="#解码异或后的数组" aria-hidden="true">#</a> 解码异或后的数组</h2><p><strong>未知</strong> 整数数组 arr 由 n 个非负整数组成。</p><p>经编码后变为长度为 n - 1 的另一个整数数组 encoded ，其中 <code>encoded[i] = arr[i] XOR arr[i + 1]</code> 。例如，arr = [1,0,2,1] 经编码后得到 encoded = [1,2,3] 。</p><p>给你编码后的数组 <code>encoded</code> 和原数组 arr 的第一个元素 first（arr[0]）。</p><p>请解码返回原数组 <code>arr</code> 。可以证明答案存在并且是唯一的。</p><h3 id="示例-1："><a class="header-anchor" href="#示例-1：" aria-hidden="true">#</a> 示例 1：</h3><div class="language-"><pre><code>输入：encoded = [1,2,3], first = 1\n输出：[1,0,2,1]\n解释：若 arr = [1,0,2,1] ，那么 first = 1 且 encoded = [1 XOR 0, 0 XOR 2, 2 XOR 1] = [1,2,3]\n</code></pre></div><h3 id="示例-2："><a class="header-anchor" href="#示例-2：" aria-hidden="true">#</a> 示例 2：</h3><div class="language-"><pre><code>输入：encoded = [6,2,7,3], first = 4\n输出：[4,2,0,7,4]\n</code></pre></div><h2 id="分析"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><p><code>当 1≤ i&lt; n 时，有 arr[i]=arr[i−1] ⊕ encoded[i−1]</code></p><h3 id="代码"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h3><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">decode</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">encoded<span class="token punctuation">,</span> first</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> n  <span class="token operator">=</span> encoded<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n    arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> first\n    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> encoded<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> arr\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="大神版"><a class="header-anchor" href="#大神版" aria-hidden="true">#</a> 大神版</h3><div class="language-js"><pre><code><span class="token keyword">var</span> <span class="token function-variable function">decode</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">encoded<span class="token punctuation">,</span> first</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n <span class="token keyword">return</span> encoded<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cur<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> last <span class="token operator">=</span> cur<span class="token punctuation">[</span>cur<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>\n        cur<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>last <span class="token operator">^</span> next<span class="token punctuation">)</span>\n        <span class="token keyword">return</span> cur\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>first<span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="参考资料"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> ## 参考资料</h2><ul><li><a href="https://leetcode-cn.com/problems/decode-xored-array/description/" target="_blank" rel="noopener noreferrer">leetcode题目链接</a></li><li><a href="https://leetcode-cn.com/problems/decode-xored-array/solution/jie-ma-yi-huo-hou-de-shu-zu-by-leetcode-yp0mg/" target="_blank" rel="noopener noreferrer">官方题解</a></li></ul>',17);t.render=function(s,e,t,o,c,r){return n(),a("div",null,[p])};export default t;export{e as __pageData};
